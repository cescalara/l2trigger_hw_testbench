// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="L2triggerv5,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z030ffg676-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.162000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=58,HLS_SYN_DSP=28,HLS_SYN_FF=11877,HLS_SYN_LUT=11652}" *)

module L2triggerv5 (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TUSER,
        in_stream_TLAST,
        in_stream_TID,
        in_stream_TDEST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TUSER,
        out_stream_TLAST,
        out_stream_TID,
        out_stream_TDEST,
        trig_data,
        trig_data_ap_vld,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 111'b1;
parameter    ap_ST_st2_fsm_1 = 111'b10;
parameter    ap_ST_st3_fsm_2 = 111'b100;
parameter    ap_ST_st4_fsm_3 = 111'b1000;
parameter    ap_ST_st5_fsm_4 = 111'b10000;
parameter    ap_ST_st6_fsm_5 = 111'b100000;
parameter    ap_ST_st7_fsm_6 = 111'b1000000;
parameter    ap_ST_st8_fsm_7 = 111'b10000000;
parameter    ap_ST_st9_fsm_8 = 111'b100000000;
parameter    ap_ST_st10_fsm_9 = 111'b1000000000;
parameter    ap_ST_st11_fsm_10 = 111'b10000000000;
parameter    ap_ST_st12_fsm_11 = 111'b100000000000;
parameter    ap_ST_st13_fsm_12 = 111'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 111'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 111'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 111'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 111'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 111'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 111'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 111'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 111'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 111'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 111'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 111'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 111'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 111'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 111'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 111'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 111'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 111'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 111'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 111'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 111'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 111'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 111'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 111'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 111'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 111'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 111'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 111'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 111'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 111'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 111'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 111'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 111'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 111'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 111'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 111'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 111'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 111'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 111'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 111'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 111'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 111'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 111'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 111'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 111'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 111'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 111'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 111'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 111'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 111'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 111'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 111'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 111'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 111'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 111'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 111'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 111'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 111'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 111'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 111'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_6C = 32'b1101100;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_6E = 32'b1101110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_FF = 32'b11111111;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv64_4018000000000000 = 64'b100000000011000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv16_FFFF = 16'b1111111111111111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv12_C01 = 12'b110000000001;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (C_S_AXI_CTRL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input  [3:0] in_stream_TKEEP;
input  [3:0] in_stream_TSTRB;
input  [1:0] in_stream_TUSER;
input  [0:0] in_stream_TLAST;
input  [4:0] in_stream_TID;
input  [5:0] in_stream_TDEST;
output  [63:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [7:0] out_stream_TKEEP;
output  [7:0] out_stream_TSTRB;
output  [1:0] out_stream_TUSER;
output  [0:0] out_stream_TLAST;
output  [4:0] out_stream_TID;
output  [5:0] out_stream_TDEST;
output  [31:0] trig_data;
output   trig_data_ap_vld;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1 : 0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1 : 0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

reg in_stream_TREADY;
reg out_stream_TVALID;
reg[31:0] trig_data;
reg trig_data_ap_vld;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [110:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_128;
reg    ap_ready;
wire   [15:0] n_pixels_in_bus;
reg    in_stream_TDATA_blk_n;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_162;
reg    out_stream_TDATA_blk_n;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_170;
wire   [31:0] sum_overP1_q0;
reg   [31:0] reg_569;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_215;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_222;
wire   [31:0] sum_overP2_q0;
reg   [31:0] reg_573;
wire   [14:0] tmp_s_fu_577_p4;
reg   [14:0] tmp_s_reg_1199;
wire   [15:0] tmp_fu_587_p1;
reg   [15:0] tmp_reg_1207;
wire   [14:0] i_4_fu_596_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_241;
wire   [3:0] kk_2_fu_616_p2;
reg   [3:0] kk_2_reg_1223;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_250;
wire   [14:0] tmp_1_fu_646_p2;
reg   [14:0] tmp_1_reg_1228;
wire   [0:0] exitcond1_fu_610_p2;
wire   [14:0] i_5_fu_657_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_265;
wire   [7:0] k_1_fu_680_p2;
reg   [7:0] k_1_reg_1244;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_274;
wire   [15:0] tmp_4_fu_686_p2;
reg   [15:0] tmp_4_reg_1249;
wire   [0:0] exitcond_fu_674_p2;
wire   [14:0] i_7_fu_696_p2;
reg   [14:0] i_7_reg_1257;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_289;
wire   [63:0] tmp_8_fu_702_p1;
reg   [63:0] tmp_8_reg_1262;
wire   [0:0] exitcond7_fu_691_p2;
reg   [10:0] sum_pix1_addr_2_reg_1272;
reg   [10:0] sum_pix2_addr_2_reg_1277;
wire   [31:0] sum_pix1_q0;
reg   [31:0] sum_pix1_load_1_reg_1282;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_307;
wire   [31:0] sum_pix2_q0;
reg   [31:0] sum_pix2_load_1_reg_1287;
wire   [15:0] tmp_5_fu_712_p1;
reg   [15:0] tmp_5_reg_1292;
wire   [15:0] phitmp_fu_716_p4;
reg   [15:0] phitmp_reg_1297;
wire  signed [31:0] tmp_6_fu_726_p1;
reg  signed [31:0] tmp_6_reg_1302;
wire   [31:0] tmp_7_fu_730_p2;
reg   [31:0] tmp_7_reg_1307;
wire  signed [31:0] tmp_10_fu_735_p1;
reg  signed [31:0] tmp_10_reg_1312;
wire   [31:0] tmp_11_fu_739_p2;
reg   [31:0] tmp_11_reg_1317;
reg   [13:0] data_shift1_addr_reg_1322;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_333;
reg   [13:0] data_shift2_addr_reg_1327;
reg   [10:0] sum_overP1_addr_reg_1332;
reg   [10:0] sum_overP2_addr_reg_1337;
wire   [14:0] tmp_41_fu_782_p2;
reg   [14:0] tmp_41_reg_1345;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_348;
wire   [0:0] tmp_37_fu_744_p3;
wire   [14:0] tmp_45_fu_824_p2;
reg   [14:0] tmp_45_reg_1350;
wire   [3:0] kk_3_fu_830_p2;
reg   [3:0] kk_3_reg_1355;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_364;
wire   [16:0] data_shift1_q0;
reg   [16:0] data_shift1_load_reg_1370;
wire   [16:0] data_shift2_q0;
reg   [16:0] data_shift2_load_reg_1376;
wire   [31:0] tmp_30_fu_860_p2;
reg   [31:0] tmp_30_reg_1382;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_379;
wire   [31:0] tmp_31_fu_866_p2;
reg   [31:0] tmp_31_reg_1387;
wire   [31:0] tmp_32_fu_872_p2;
reg   [31:0] tmp_32_reg_1397;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_392;
wire   [31:0] tmp_33_fu_877_p2;
reg   [31:0] tmp_33_reg_1403;
wire   [31:0] thresh1_q0;
reg   [31:0] thresh1_load_reg_1409;
wire   [0:0] tmp_34_fu_882_p2;
reg   [0:0] tmp_34_reg_1414;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_405;
wire   [31:0] thresh2_q0;
reg   [31:0] thresh2_load_reg_1423;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_418;
wire   [0:0] tmp_35_fu_886_p2;
reg   [0:0] tmp_35_reg_1428;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_427;
wire   [14:0] i_6_fu_899_p2;
reg   [14:0] i_6_reg_1435;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_438;
wire   [63:0] tmp_13_fu_905_p1;
reg   [63:0] tmp_13_reg_1440;
wire   [0:0] exitcond6_fu_894_p2;
wire   [0:0] l3_data_last_V_fu_911_p2;
reg   [0:0] l3_data_last_V_reg_1456;
reg   [24:0] tmp_14_reg_1461;
reg    ap_sig_ioackin_out_stream_TREADY;
reg   [24:0] tmp_15_reg_1466;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_466;
wire   [63:0] grp_fu_553_p1;
reg   [63:0] tmp_17_reg_1481;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_477;
wire   [63:0] grp_fu_556_p1;
reg   [63:0] tmp_23_reg_1487;
wire   [63:0] grp_fu_559_p2;
reg   [63:0] tmp_18_reg_1493;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_488;
wire   [63:0] grp_fu_564_p2;
reg   [63:0] tmp_24_reg_1498;
wire   [63:0] grp_fu_543_p2;
reg   [63:0] tmp_19_reg_1503;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_499;
wire   [63:0] grp_fu_548_p2;
reg   [63:0] tmp_25_reg_1508;
reg   [10:0] loc_V_reg_1513;
reg    ap_sig_cseq_ST_st108_fsm_107;
reg    ap_sig_510;
wire   [51:0] loc_V_1_fu_983_p1;
reg   [51:0] loc_V_1_reg_1519;
reg   [10:0] loc_V_2_reg_1524;
wire   [51:0] loc_V_3_fu_1001_p1;
reg   [51:0] loc_V_3_reg_1530;
wire   [0:0] isNeg_fu_1014_p3;
reg   [0:0] isNeg_reg_1535;
reg    ap_sig_cseq_ST_st109_fsm_108;
reg    ap_sig_525;
wire   [11:0] sh_assign_1_fu_1031_p3;
reg   [11:0] sh_assign_1_reg_1540;
wire   [0:0] isNeg_1_fu_1048_p3;
reg   [0:0] isNeg_1_reg_1545;
wire   [11:0] sh_assign_3_fu_1065_p3;
reg   [11:0] sh_assign_3_reg_1550;
wire   [31:0] result_V_fu_1129_p3;
reg   [31:0] result_V_reg_1555;
reg    ap_sig_cseq_ST_st110_fsm_109;
reg    ap_sig_540;
wire   [31:0] result_V_1_fu_1192_p3;
reg   [31:0] result_V_1_reg_1560;
reg   [10:0] sum_overP1_address0;
reg    sum_overP1_ce0;
reg    sum_overP1_we0;
reg   [31:0] sum_overP1_d0;
reg   [10:0] sum_overP2_address0;
reg    sum_overP2_ce0;
reg    sum_overP2_we0;
reg   [31:0] sum_overP2_d0;
reg   [10:0] sum_pix1_address0;
reg    sum_pix1_ce0;
reg    sum_pix1_we0;
reg   [31:0] sum_pix1_d0;
reg   [13:0] data_shift1_address0;
reg    data_shift1_ce0;
reg    data_shift1_we0;
reg   [16:0] data_shift1_d0;
reg   [10:0] thresh1_address0;
reg    thresh1_ce0;
reg    thresh1_we0;
reg   [31:0] thresh1_d0;
reg   [10:0] sum_pix2_address0;
reg    sum_pix2_ce0;
reg    sum_pix2_we0;
reg   [31:0] sum_pix2_d0;
reg   [13:0] data_shift2_address0;
reg    data_shift2_ce0;
reg    data_shift2_we0;
reg   [16:0] data_shift2_d0;
reg   [10:0] thresh2_address0;
reg    thresh2_ce0;
reg    thresh2_we0;
reg   [31:0] thresh2_d0;
reg   [14:0] i_reg_457;
wire   [0:0] exitcond9_fu_591_p2;
reg   [3:0] kk_reg_468;
wire   [0:0] exitcond8_fu_652_p2;
reg   [14:0] i_1_reg_479;
reg   [7:0] k_reg_490;
reg   [14:0] i_2_reg_501;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_642;
reg   [3:0] kk_1_reg_513;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_653;
reg   [14:0] i_3_reg_524;
reg    ap_sig_cseq_ST_st111_fsm_110;
reg    ap_sig_662;
wire   [63:0] tmp_2_fu_602_p1;
wire   [63:0] tmp_17_cast_fu_668_p1;
wire   [63:0] tmp_47_cast_fu_844_p1;
wire   [63:0] tmp_51_cast_fu_852_p1;
reg    ap_reg_ioackin_out_stream_TREADY;
wire  signed [16:0] tmp_10_cast_fu_836_p1;
wire  signed [16:0] tmp_12_cast_fu_840_p1;
reg    ap_sig_cseq_ST_st100_fsm_99;
reg    ap_sig_749;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_761;
wire   [31:0] grp_fu_553_p0;
wire   [31:0] grp_fu_556_p0;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_773;
wire   [13:0] tmp_3_fu_622_p3;
wire   [10:0] tmp_9_fu_634_p3;
wire   [14:0] p_shl1_cast_fu_642_p1;
wire   [14:0] p_shl_cast_fu_630_p1;
wire   [14:0] tmp_12_fu_663_p2;
wire   [13:0] tmp_38_fu_752_p3;
wire   [10:0] tmp_39_fu_764_p3;
wire  signed [14:0] p_shl5_cast_fu_772_p1;
wire  signed [14:0] p_shl4_cast_fu_760_p1;
wire   [14:0] tmp_40_fu_776_p2;
wire   [3:0] tmp_28_fu_788_p2;
wire   [13:0] tmp_42_fu_794_p3;
wire   [10:0] tmp_43_fu_806_p3;
wire   [14:0] p_shl3_cast_fu_814_p1;
wire   [14:0] p_shl2_cast_fu_802_p1;
wire   [14:0] tmp_44_fu_818_p2;
wire  signed [31:0] extLd_fu_849_p1;
wire  signed [31:0] extLd1_fu_857_p1;
wire   [15:0] i_3_cast_fu_890_p1;
wire   [27:0] sum_pixP1_fu_945_p3;
wire   [27:0] sum_pixP2_fu_952_p3;
wire   [63:0] grp_fu_535_p2;
wire   [63:0] p_Val2_s_fu_969_p1;
wire   [63:0] grp_fu_539_p2;
wire   [63:0] p_Val2_4_fu_987_p1;
wire   [11:0] tmp_i_i_i_cast2_fu_1005_p1;
wire   [11:0] sh_assign_fu_1008_p2;
wire   [10:0] tmp_2_i_i_fu_1022_p2;
wire  signed [11:0] tmp_2_i_i_cast_fu_1027_p1;
wire   [11:0] tmp_i_i_i6_cast1_fu_1039_p1;
wire   [11:0] sh_assign_2_fu_1042_p2;
wire   [10:0] tmp_2_i_i9_fu_1056_p2;
wire  signed [11:0] tmp_2_i_i9_cast_fu_1061_p1;
wire   [52:0] p_Result_s_fu_1073_p3;
wire  signed [31:0] sh_assign_1_cast_fu_1084_p1;
wire   [52:0] tmp_4_i_i_cast_fu_1091_p1;
wire   [135:0] tmp_i_i_fu_1080_p1;
wire   [135:0] tmp_4_i_i_fu_1087_p1;
wire   [52:0] tmp_5_i_i_fu_1095_p2;
wire   [0:0] tmp_22_fu_1107_p3;
wire   [135:0] tmp_7_i_i_fu_1101_p2;
wire   [31:0] tmp_20_fu_1115_p1;
wire   [31:0] tmp_21_fu_1119_p4;
wire   [52:0] p_Result_4_fu_1136_p3;
wire  signed [31:0] sh_assign_3_cast_fu_1147_p1;
wire   [52:0] tmp_4_i_i1_cast_fu_1154_p1;
wire   [135:0] tmp_i_i5_fu_1143_p1;
wire   [135:0] tmp_4_i_i1_fu_1150_p1;
wire   [52:0] tmp_5_i_i1_fu_1158_p2;
wire   [0:0] tmp_36_fu_1170_p3;
wire   [135:0] tmp_7_i_i1_fu_1164_p2;
wire   [31:0] tmp_27_fu_1178_p1;
wire   [31:0] tmp_29_fu_1182_p4;
reg   [110:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 111'b1;
#0 ap_reg_ioackin_out_stream_TREADY = 1'b0;
end

L2triggerv5_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
L2triggerv5_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .n_pixels_in_bus(n_pixels_in_bus)
);

L2triggerv5_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_overP1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_overP1_address0),
    .ce0(sum_overP1_ce0),
    .we0(sum_overP1_we0),
    .d0(sum_overP1_d0),
    .q0(sum_overP1_q0)
);

L2triggerv5_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_overP2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_overP2_address0),
    .ce0(sum_overP2_ce0),
    .we0(sum_overP2_we0),
    .d0(sum_overP2_d0),
    .q0(sum_overP2_q0)
);

L2triggerv5_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_pix1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_pix1_address0),
    .ce0(sum_pix1_ce0),
    .we0(sum_pix1_we0),
    .d0(sum_pix1_d0),
    .q0(sum_pix1_q0)
);

L2triggerv5_data_shift1 #(
    .DataWidth( 17 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
data_shift1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_shift1_address0),
    .ce0(data_shift1_ce0),
    .we0(data_shift1_we0),
    .d0(data_shift1_d0),
    .q0(data_shift1_q0)
);

L2triggerv5_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
thresh1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(thresh1_address0),
    .ce0(thresh1_ce0),
    .we0(thresh1_we0),
    .d0(thresh1_d0),
    .q0(thresh1_q0)
);

L2triggerv5_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
sum_pix2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sum_pix2_address0),
    .ce0(sum_pix2_ce0),
    .we0(sum_pix2_we0),
    .d0(sum_pix2_d0),
    .q0(sum_pix2_q0)
);

L2triggerv5_data_shift1 #(
    .DataWidth( 17 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
data_shift2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_shift2_address0),
    .ce0(data_shift2_ce0),
    .we0(data_shift2_we0),
    .d0(data_shift2_d0),
    .q0(data_shift2_q0)
);

L2triggerv5_sum_overP1 #(
    .DataWidth( 32 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
thresh2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(thresh2_address0),
    .ce0(thresh2_ce0),
    .we0(thresh2_we0),
    .d0(thresh2_d0),
    .q0(thresh2_q0)
);

L2triggerv5_dadd_64ns_64ns_64_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
L2triggerv5_dadd_64ns_64ns_64_9_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_17_reg_1481),
    .din1(tmp_19_reg_1503),
    .ce(1'b1),
    .dout(grp_fu_535_p2)
);

L2triggerv5_dadd_64ns_64ns_64_9_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
L2triggerv5_dadd_64ns_64ns_64_9_full_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_23_reg_1487),
    .din1(tmp_25_reg_1508),
    .ce(1'b1),
    .dout(grp_fu_539_p2)
);

L2triggerv5_dmul_64ns_64ns_64_10_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
L2triggerv5_dmul_64ns_64ns_64_10_max_dsp_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_18_reg_1493),
    .din1(ap_const_lv64_4018000000000000),
    .ce(1'b1),
    .dout(grp_fu_543_p2)
);

L2triggerv5_dmul_64ns_64ns_64_10_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
L2triggerv5_dmul_64ns_64ns_64_10_max_dsp_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_24_reg_1498),
    .din1(ap_const_lv64_4018000000000000),
    .ce(1'b1),
    .dout(grp_fu_548_p2)
);

L2triggerv5_uitodp_32ns_64_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
L2triggerv5_uitodp_32ns_64_8_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_553_p0),
    .ce(1'b1),
    .dout(grp_fu_553_p1)
);

L2triggerv5_uitodp_32ns_64_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
L2triggerv5_uitodp_32ns_64_8_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_556_p0),
    .ce(1'b1),
    .dout(grp_fu_556_p1)
);

L2triggerv5_dsqrt_64ns_64ns_64_59 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
L2triggerv5_dsqrt_64ns_64ns_64_59_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_const_lv64_0),
    .din1(tmp_17_reg_1481),
    .ce(1'b1),
    .dout(grp_fu_559_p2)
);

L2triggerv5_dsqrt_64ns_64ns_64_59 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
L2triggerv5_dsqrt_64ns_64ns_64_59_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(ap_const_lv64_0),
    .din1(tmp_23_reg_1487),
    .ce(1'b1),
    .dout(grp_fu_564_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_out_stream_TREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == ap_sig_ioackin_out_stream_TREADY))) begin
            ap_reg_ioackin_out_stream_TREADY <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b1 == out_stream_TREADY))) begin
            ap_reg_ioackin_out_stream_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond1_fu_610_p2 == 1'b0))) begin
        i_1_reg_479 <= ap_const_lv15_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_652_p2))) begin
        i_1_reg_479 <= i_5_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond_fu_674_p2))) begin
        i_2_reg_501 <= ap_const_lv15_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        i_2_reg_501 <= i_7_reg_1257;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond_fu_674_p2))) begin
        i_3_reg_524 <= ap_const_lv15_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        i_3_reg_524 <= i_6_reg_1435;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_591_p2))) begin
        i_reg_457 <= i_4_fu_596_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_457 <= ap_const_lv15_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond7_fu_691_p2))) begin
        k_reg_490 <= k_1_reg_1244;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(exitcond1_fu_610_p2 == 1'b0))) begin
        k_reg_490 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        kk_1_reg_513 <= kk_3_reg_1355;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        kk_1_reg_513 <= ap_const_lv4_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_fu_652_p2))) begin
        kk_reg_468 <= kk_2_reg_1223;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond9_fu_591_p2))) begin
        kk_reg_468 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        data_shift1_addr_reg_1322 <= tmp_8_reg_1262;
        data_shift2_addr_reg_1327 <= tmp_8_reg_1262;
        sum_overP1_addr_reg_1332 <= tmp_8_reg_1262;
        sum_overP2_addr_reg_1337 <= tmp_8_reg_1262;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        data_shift1_load_reg_1370 <= data_shift1_q0;
        data_shift2_load_reg_1376 <= data_shift2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        i_6_reg_1435 <= i_6_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_7_reg_1257 <= i_7_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st109_fsm_108)) begin
        isNeg_1_reg_1545 <= sh_assign_2_fu_1042_p2[ap_const_lv32_B];
        isNeg_reg_1535 <= sh_assign_fu_1008_p2[ap_const_lv32_B];
        sh_assign_1_reg_1540 <= sh_assign_1_fu_1031_p3;
        sh_assign_3_reg_1550 <= sh_assign_3_fu_1065_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        k_1_reg_1244 <= k_1_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        kk_2_reg_1223 <= kk_2_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == tmp_37_fu_744_p3))) begin
        kk_3_reg_1355 <= kk_3_fu_830_p2;
        tmp_41_reg_1345 <= tmp_41_fu_782_p2;
        tmp_45_reg_1350 <= tmp_45_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond6_fu_894_p2))) begin
        l3_data_last_V_reg_1456 <= l3_data_last_V_fu_911_p2;
        tmp_13_reg_1440[14 : 0] <= tmp_13_fu_905_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        loc_V_1_reg_1519 <= loc_V_1_fu_983_p1;
        loc_V_2_reg_1524 <= {{p_Val2_4_fu_987_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        loc_V_3_reg_1530 <= loc_V_3_fu_1001_p1;
        loc_V_reg_1513 <= {{p_Val2_s_fu_969_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(in_stream_TVALID == 1'b0))) begin
        phitmp_reg_1297 <= {{in_stream_TDATA[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_10_reg_1312 <= tmp_10_fu_735_p1;
        tmp_11_reg_1317 <= tmp_11_fu_739_p2;
        tmp_5_reg_1292 <= tmp_5_fu_712_p1;
        tmp_6_reg_1302 <= tmp_6_fu_726_p1;
        tmp_7_reg_1307 <= tmp_7_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        reg_569 <= sum_overP1_q0;
        reg_573 <= sum_overP2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st110_fsm_109)) begin
        result_V_1_reg_1560 <= result_V_1_fu_1192_p3;
        result_V_reg_1555 <= result_V_fu_1129_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond7_fu_691_p2))) begin
        sum_pix1_addr_2_reg_1272 <= tmp_8_fu_702_p1;
        sum_pix2_addr_2_reg_1277 <= tmp_8_fu_702_p1;
        tmp_8_reg_1262[14 : 0] <= tmp_8_fu_702_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        sum_pix1_load_1_reg_1282 <= sum_pix1_q0;
        sum_pix2_load_1_reg_1287 <= sum_pix2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        thresh1_load_reg_1409 <= thresh1_q0;
        tmp_32_reg_1397 <= tmp_32_fu_872_p2;
        tmp_33_reg_1403 <= tmp_33_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        thresh2_load_reg_1423 <= thresh2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == ap_sig_ioackin_out_stream_TREADY))) begin
        tmp_14_reg_1461 <= {{sum_pix1_q0[ap_const_lv32_1F : ap_const_lv32_7]}};
        tmp_15_reg_1466 <= {{sum_pix2_q0[ap_const_lv32_1F : ap_const_lv32_7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        tmp_17_reg_1481 <= grp_fu_553_p1;
        tmp_23_reg_1487 <= grp_fu_556_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st89_fsm_88)) begin
        tmp_18_reg_1493 <= grp_fu_559_p2;
        tmp_24_reg_1498 <= grp_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st99_fsm_98)) begin
        tmp_19_reg_1503 <= grp_fu_543_p2;
        tmp_25_reg_1508 <= grp_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond1_fu_610_p2 == 1'b0))) begin
        tmp_1_reg_1228[14 : 7] <= tmp_1_fu_646_p2[14 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_30_reg_1382 <= tmp_30_fu_860_p2;
        tmp_31_reg_1387 <= tmp_31_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_34_reg_1414 <= tmp_34_fu_882_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (1'b0 == tmp_34_reg_1414))) begin
        tmp_35_reg_1428 <= tmp_35_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond_fu_674_p2))) begin
        tmp_4_reg_1249 <= tmp_4_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        tmp_reg_1207[14 : 0] <= tmp_fu_587_p1[14 : 0];
        tmp_s_reg_1199 <= {{n_pixels_in_bus[ap_const_lv32_F : ap_const_lv32_1]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond6_fu_894_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond6_fu_894_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_749) begin
        ap_sig_cseq_ST_st100_fsm_99 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_99 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_510) begin
        ap_sig_cseq_ST_st108_fsm_107 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st108_fsm_107 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_525) begin
        ap_sig_cseq_ST_st109_fsm_108 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st109_fsm_108 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_348) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_540) begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_662) begin
        ap_sig_cseq_ST_st111_fsm_110 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st111_fsm_110 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_364) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_215) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_379) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_653) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_222) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_392) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_405) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_418) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_427) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_642) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_438) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_170) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_466) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_241) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_477) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_773) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_250) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_265) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_274) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_289) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_307) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_488) begin
        ap_sig_cseq_ST_st89_fsm_88 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_162) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_761) begin
        ap_sig_cseq_ST_st90_fsm_89 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_499) begin
        ap_sig_cseq_ST_st99_fsm_98 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_333) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_out_stream_TREADY)) begin
        ap_sig_ioackin_out_stream_TREADY = out_stream_TREADY;
    end else begin
        ap_sig_ioackin_out_stream_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        data_shift1_address0 = tmp_51_cast_fu_852_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        data_shift1_address0 = data_shift1_addr_reg_1322;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift1_address0 = tmp_17_cast_fu_668_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        data_shift1_address0 = tmp_47_cast_fu_844_p1;
    end else begin
        data_shift1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        data_shift1_ce0 = 1'b1;
    end else begin
        data_shift1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        data_shift1_d0 = data_shift1_load_reg_1370;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        data_shift1_d0 = tmp_10_cast_fu_836_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift1_d0 = ap_const_lv17_0;
    end else begin
        data_shift1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_652_p2)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_37_fu_744_p3)))) begin
        data_shift1_we0 = 1'b1;
    end else begin
        data_shift1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        data_shift2_address0 = tmp_51_cast_fu_852_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        data_shift2_address0 = data_shift2_addr_reg_1327;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift2_address0 = tmp_17_cast_fu_668_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        data_shift2_address0 = tmp_47_cast_fu_844_p1;
    end else begin
        data_shift2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        data_shift2_ce0 = 1'b1;
    end else begin
        data_shift2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        data_shift2_d0 = data_shift2_load_reg_1376;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        data_shift2_d0 = tmp_12_cast_fu_840_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        data_shift2_d0 = ap_const_lv17_0;
    end else begin
        data_shift2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_652_p2)) | ((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == tmp_37_fu_744_p3)))) begin
        data_shift2_we0 = 1'b1;
    end else begin
        data_shift2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        in_stream_TDATA_blk_n = in_stream_TVALID;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(in_stream_TVALID == 1'b0))) begin
        in_stream_TREADY = 1'b1;
    end else begin
        in_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        out_stream_TDATA_blk_n = out_stream_TREADY;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == ap_reg_ioackin_out_stream_TREADY))) begin
        out_stream_TVALID = 1'b1;
    end else begin
        out_stream_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP1_address0 = tmp_8_reg_1262;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        sum_overP1_address0 = sum_overP1_addr_reg_1332;
    end else begin
        sum_overP1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        sum_overP1_ce0 = 1'b1;
    end else begin
        sum_overP1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        sum_overP1_d0 = tmp_32_reg_1397;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        sum_overP1_d0 = tmp_30_reg_1382;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP1_d0 = ap_const_lv32_0;
    end else begin
        sum_overP1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        sum_overP1_we0 = 1'b1;
    end else begin
        sum_overP1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP2_address0 = tmp_8_reg_1262;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        sum_overP2_address0 = sum_overP2_addr_reg_1337;
    end else begin
        sum_overP2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        sum_overP2_ce0 = 1'b1;
    end else begin
        sum_overP2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        sum_overP2_d0 = tmp_33_reg_1403;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        sum_overP2_d0 = tmp_31_reg_1387;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_overP2_d0 = ap_const_lv32_0;
    end else begin
        sum_overP2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        sum_overP2_we0 = 1'b1;
    end else begin
        sum_overP2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix1_address0 = sum_pix1_addr_2_reg_1272;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        sum_pix1_address0 = tmp_2_fu_602_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        sum_pix1_address0 = tmp_13_fu_905_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        sum_pix1_address0 = tmp_8_fu_702_p1;
    end else begin
        sum_pix1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        sum_pix1_ce0 = 1'b1;
    end else begin
        sum_pix1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix1_d0 = tmp_7_reg_1307;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        sum_pix1_d0 = ap_const_lv32_0;
    end else begin
        sum_pix1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_591_p2)))) begin
        sum_pix1_we0 = 1'b1;
    end else begin
        sum_pix1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix2_address0 = sum_pix2_addr_2_reg_1277;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        sum_pix2_address0 = tmp_2_fu_602_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        sum_pix2_address0 = tmp_13_fu_905_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        sum_pix2_address0 = tmp_8_fu_702_p1;
    end else begin
        sum_pix2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        sum_pix2_ce0 = 1'b1;
    end else begin
        sum_pix2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        sum_pix2_d0 = tmp_11_reg_1317;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        sum_pix2_d0 = ap_const_lv32_0;
    end else begin
        sum_pix2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_591_p2)))) begin
        sum_pix2_we0 = 1'b1;
    end else begin
        sum_pix2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        thresh1_address0 = tmp_13_reg_1440;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh1_address0 = tmp_2_fu_602_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        thresh1_address0 = tmp_8_reg_1262;
    end else begin
        thresh1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st111_fsm_110))) begin
        thresh1_ce0 = 1'b1;
    end else begin
        thresh1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        thresh1_d0 = result_V_reg_1555;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh1_d0 = ap_const_lv32_FF;
    end else begin
        thresh1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_591_p2)) | (1'b1 == ap_sig_cseq_ST_st111_fsm_110))) begin
        thresh1_we0 = 1'b1;
    end else begin
        thresh1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        thresh2_address0 = tmp_13_reg_1440;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh2_address0 = tmp_2_fu_602_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        thresh2_address0 = tmp_8_reg_1262;
    end else begin
        thresh2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st111_fsm_110))) begin
        thresh2_ce0 = 1'b1;
    end else begin
        thresh2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        thresh2_d0 = result_V_1_reg_1560;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        thresh2_d0 = ap_const_lv32_FF;
    end else begin
        thresh2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond9_fu_591_p2)) | (1'b1 == ap_sig_cseq_ST_st111_fsm_110))) begin
        thresh2_we0 = 1'b1;
    end else begin
        thresh2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (~(1'b0 == tmp_34_reg_1414) | ~(1'b0 == tmp_35_fu_886_p2)))) begin
        trig_data = ap_const_lv32_1;
    end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (~(1'b0 == tmp_34_reg_1414) | ~(1'b0 == tmp_35_reg_1428))))) begin
        trig_data = ap_const_lv32_0;
    end else begin
        trig_data = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (~(1'b0 == tmp_34_reg_1414) | ~(1'b0 == tmp_35_fu_886_p2))) | ((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (~(1'b0 == tmp_34_reg_1414) | ~(1'b0 == tmp_35_reg_1428))))) begin
        trig_data_ap_vld = 1'b1;
    end else begin
        trig_data_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond9_fu_591_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((exitcond1_fu_610_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond8_fu_652_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond_fu_674_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if ((1'b0 == exitcond7_fu_691_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            if (~(in_stream_TVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            if (~(1'b0 == tmp_37_fu_744_p3)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            if (~(1'b0 == tmp_34_fu_882_p2)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st21_fsm_20 : begin
            if (~(1'b0 == exitcond6_fu_894_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st22_fsm_21 : begin
            if (~(1'b0 == ap_sig_ioackin_out_stream_TREADY)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_128 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_162 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_170 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_215 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_222 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_241 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_250 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_265 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_274 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_289 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_307 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_333 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_348 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_364 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_379 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_392 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_405 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_418 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_427 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_438 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_466 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_477 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_488 = (1'b1 == ap_CS_fsm[ap_const_lv32_58]);
end

always @ (*) begin
    ap_sig_499 = (1'b1 == ap_CS_fsm[ap_const_lv32_62]);
end

always @ (*) begin
    ap_sig_510 = (1'b1 == ap_CS_fsm[ap_const_lv32_6B]);
end

always @ (*) begin
    ap_sig_525 = (1'b1 == ap_CS_fsm[ap_const_lv32_6C]);
end

always @ (*) begin
    ap_sig_540 = (1'b1 == ap_CS_fsm[ap_const_lv32_6D]);
end

always @ (*) begin
    ap_sig_642 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_653 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_662 = (1'b1 == ap_CS_fsm[ap_const_lv32_6E]);
end

always @ (*) begin
    ap_sig_749 = (1'b1 == ap_CS_fsm[ap_const_lv32_63]);
end

always @ (*) begin
    ap_sig_761 = (1'b1 == ap_CS_fsm[ap_const_lv32_59]);
end

always @ (*) begin
    ap_sig_773 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

assign exitcond1_fu_610_p2 = ((kk_reg_468 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond6_fu_894_p2 = ((i_3_reg_524 == tmp_s_reg_1199) ? 1'b1 : 1'b0);

assign exitcond7_fu_691_p2 = ((i_2_reg_501 == tmp_s_reg_1199) ? 1'b1 : 1'b0);

assign exitcond8_fu_652_p2 = ((i_1_reg_479 == tmp_s_reg_1199) ? 1'b1 : 1'b0);

assign exitcond9_fu_591_p2 = ((i_reg_457 == tmp_s_reg_1199) ? 1'b1 : 1'b0);

assign exitcond_fu_674_p2 = ((k_reg_490 == ap_const_lv8_80) ? 1'b1 : 1'b0);

assign extLd1_fu_857_p1 = $signed(data_shift2_load_reg_1376);

assign extLd_fu_849_p1 = $signed(data_shift1_load_reg_1370);

assign grp_fu_553_p0 = sum_pixP1_fu_945_p3;

assign grp_fu_556_p0 = sum_pixP2_fu_952_p3;

assign i_3_cast_fu_890_p1 = i_3_reg_524;

assign i_4_fu_596_p2 = (i_reg_457 + ap_const_lv15_1);

assign i_5_fu_657_p2 = (i_1_reg_479 + ap_const_lv15_1);

assign i_6_fu_899_p2 = (i_3_reg_524 + ap_const_lv15_1);

assign i_7_fu_696_p2 = (i_2_reg_501 + ap_const_lv15_1);

assign isNeg_1_fu_1048_p3 = sh_assign_2_fu_1042_p2[ap_const_lv32_B];

assign isNeg_fu_1014_p3 = sh_assign_fu_1008_p2[ap_const_lv32_B];

assign k_1_fu_680_p2 = (k_reg_490 + ap_const_lv8_1);

assign kk_2_fu_616_p2 = (kk_reg_468 + ap_const_lv4_1);

assign kk_3_fu_830_p2 = ($signed(kk_1_reg_513) + $signed(ap_const_lv4_F));

assign l3_data_last_V_fu_911_p2 = ((i_3_cast_fu_890_p1 == tmp_4_reg_1249) ? 1'b1 : 1'b0);

assign loc_V_1_fu_983_p1 = p_Val2_s_fu_969_p1[51:0];

assign loc_V_3_fu_1001_p1 = p_Val2_4_fu_987_p1[51:0];

assign out_stream_TDATA = {{sum_pix2_q0}, {sum_pix1_q0}};

assign out_stream_TDEST = ap_const_lv6_0;

assign out_stream_TID = ap_const_lv5_0;

assign out_stream_TKEEP = ap_const_lv8_FF;

assign out_stream_TLAST = l3_data_last_V_reg_1456;

assign out_stream_TSTRB = ap_const_lv8_FF;

assign out_stream_TUSER = ap_const_lv2_0;

assign p_Result_4_fu_1136_p3 = {{1'b1}, {loc_V_3_reg_1530}};

assign p_Result_s_fu_1073_p3 = {{1'b1}, {loc_V_1_reg_1519}};

assign p_Val2_4_fu_987_p1 = grp_fu_539_p2;

assign p_Val2_s_fu_969_p1 = grp_fu_535_p2;

assign p_shl1_cast_fu_642_p1 = tmp_9_fu_634_p3;

assign p_shl2_cast_fu_802_p1 = tmp_42_fu_794_p3;

assign p_shl3_cast_fu_814_p1 = tmp_43_fu_806_p3;

assign p_shl4_cast_fu_760_p1 = $signed(tmp_38_fu_752_p3);

assign p_shl5_cast_fu_772_p1 = $signed(tmp_39_fu_764_p3);

assign p_shl_cast_fu_630_p1 = tmp_3_fu_622_p3;

assign phitmp_fu_716_p4 = {{in_stream_TDATA[ap_const_lv32_1F : ap_const_lv32_10]}};

assign result_V_1_fu_1192_p3 = ((isNeg_1_reg_1545[0:0] === 1'b1) ? tmp_27_fu_1178_p1 : tmp_29_fu_1182_p4);

assign result_V_fu_1129_p3 = ((isNeg_reg_1535[0:0] === 1'b1) ? tmp_20_fu_1115_p1 : tmp_21_fu_1119_p4);

assign sh_assign_1_cast_fu_1084_p1 = $signed(sh_assign_1_reg_1540);

assign sh_assign_1_fu_1031_p3 = ((isNeg_fu_1014_p3[0:0] === 1'b1) ? tmp_2_i_i_cast_fu_1027_p1 : sh_assign_fu_1008_p2);

assign sh_assign_2_fu_1042_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i6_cast1_fu_1039_p1));

assign sh_assign_3_cast_fu_1147_p1 = $signed(sh_assign_3_reg_1550);

assign sh_assign_3_fu_1065_p3 = ((isNeg_1_fu_1048_p3[0:0] === 1'b1) ? tmp_2_i_i9_cast_fu_1061_p1 : sh_assign_2_fu_1042_p2);

assign sh_assign_fu_1008_p2 = ($signed(ap_const_lv12_C01) + $signed(tmp_i_i_i_cast2_fu_1005_p1));

assign sum_pixP1_fu_945_p3 = {{tmp_14_reg_1461}, {ap_const_lv3_0}};

assign sum_pixP2_fu_952_p3 = {{tmp_15_reg_1466}, {ap_const_lv3_0}};

assign tmp_10_cast_fu_836_p1 = $signed(tmp_5_reg_1292);

assign tmp_10_fu_735_p1 = $signed(phitmp_fu_716_p4);

assign tmp_11_fu_739_p2 = ($signed(sum_pix2_load_1_reg_1287) + $signed(tmp_10_fu_735_p1));

assign tmp_12_cast_fu_840_p1 = $signed(phitmp_reg_1297);

assign tmp_12_fu_663_p2 = (tmp_1_reg_1228 + i_1_reg_479);

assign tmp_13_fu_905_p1 = i_3_reg_524;

assign tmp_17_cast_fu_668_p1 = tmp_12_fu_663_p2;

assign tmp_1_fu_646_p2 = (p_shl1_cast_fu_642_p1 + p_shl_cast_fu_630_p1);

assign tmp_20_fu_1115_p1 = tmp_22_fu_1107_p3;

assign tmp_21_fu_1119_p4 = {{tmp_7_i_i_fu_1101_p2[ap_const_lv32_53 : ap_const_lv32_34]}};

assign tmp_22_fu_1107_p3 = tmp_5_i_i_fu_1095_p2[ap_const_lv32_34];

assign tmp_27_fu_1178_p1 = tmp_36_fu_1170_p3;

assign tmp_28_fu_788_p2 = (kk_1_reg_513 + ap_const_lv4_1);

assign tmp_29_fu_1182_p4 = {{tmp_7_i_i1_fu_1164_p2[ap_const_lv32_53 : ap_const_lv32_34]}};

assign tmp_2_fu_602_p1 = i_reg_457;

assign tmp_2_i_i9_cast_fu_1061_p1 = $signed(tmp_2_i_i9_fu_1056_p2);

assign tmp_2_i_i9_fu_1056_p2 = (ap_const_lv11_3FF - loc_V_2_reg_1524);

assign tmp_2_i_i_cast_fu_1027_p1 = $signed(tmp_2_i_i_fu_1022_p2);

assign tmp_2_i_i_fu_1022_p2 = (ap_const_lv11_3FF - loc_V_reg_1513);

assign tmp_30_fu_860_p2 = ($signed(reg_569) + $signed(extLd_fu_849_p1));

assign tmp_31_fu_866_p2 = ($signed(reg_573) + $signed(extLd1_fu_857_p1));

assign tmp_32_fu_872_p2 = ($signed(tmp_6_reg_1302) + $signed(reg_569));

assign tmp_33_fu_877_p2 = ($signed(tmp_10_reg_1312) + $signed(reg_573));

assign tmp_34_fu_882_p2 = ((tmp_32_reg_1397 > thresh1_load_reg_1409) ? 1'b1 : 1'b0);

assign tmp_35_fu_886_p2 = ((tmp_33_reg_1403 > thresh2_load_reg_1423) ? 1'b1 : 1'b0);

assign tmp_36_fu_1170_p3 = tmp_5_i_i1_fu_1158_p2[ap_const_lv32_34];

assign tmp_37_fu_744_p3 = kk_1_reg_513[ap_const_lv32_3];

assign tmp_38_fu_752_p3 = {{kk_1_reg_513}, {ap_const_lv10_0}};

assign tmp_39_fu_764_p3 = {{kk_1_reg_513}, {ap_const_lv7_0}};

assign tmp_3_fu_622_p3 = {{kk_reg_468}, {ap_const_lv10_0}};

assign tmp_40_fu_776_p2 = ($signed(p_shl5_cast_fu_772_p1) + $signed(p_shl4_cast_fu_760_p1));

assign tmp_41_fu_782_p2 = (tmp_40_fu_776_p2 + i_2_reg_501);

assign tmp_42_fu_794_p3 = {{tmp_28_fu_788_p2}, {ap_const_lv10_0}};

assign tmp_43_fu_806_p3 = {{tmp_28_fu_788_p2}, {ap_const_lv7_0}};

assign tmp_44_fu_818_p2 = (p_shl3_cast_fu_814_p1 + p_shl2_cast_fu_802_p1);

assign tmp_45_fu_824_p2 = (tmp_44_fu_818_p2 + i_2_reg_501);

assign tmp_47_cast_fu_844_p1 = tmp_41_reg_1345;

assign tmp_4_fu_686_p2 = ($signed(tmp_reg_1207) + $signed(ap_const_lv16_FFFF));

assign tmp_4_i_i1_cast_fu_1154_p1 = $unsigned(sh_assign_3_cast_fu_1147_p1);

assign tmp_4_i_i1_fu_1150_p1 = $unsigned(sh_assign_3_cast_fu_1147_p1);

assign tmp_4_i_i_cast_fu_1091_p1 = $unsigned(sh_assign_1_cast_fu_1084_p1);

assign tmp_4_i_i_fu_1087_p1 = $unsigned(sh_assign_1_cast_fu_1084_p1);

assign tmp_51_cast_fu_852_p1 = tmp_45_reg_1350;

assign tmp_5_fu_712_p1 = in_stream_TDATA[15:0];

assign tmp_5_i_i1_fu_1158_p2 = p_Result_4_fu_1136_p3 >> tmp_4_i_i1_cast_fu_1154_p1;

assign tmp_5_i_i_fu_1095_p2 = p_Result_s_fu_1073_p3 >> tmp_4_i_i_cast_fu_1091_p1;

assign tmp_6_fu_726_p1 = $signed(tmp_5_fu_712_p1);

assign tmp_7_fu_730_p2 = ($signed(sum_pix1_load_1_reg_1282) + $signed(tmp_6_fu_726_p1));

assign tmp_7_i_i1_fu_1164_p2 = tmp_i_i5_fu_1143_p1 << tmp_4_i_i1_fu_1150_p1;

assign tmp_7_i_i_fu_1101_p2 = tmp_i_i_fu_1080_p1 << tmp_4_i_i_fu_1087_p1;

assign tmp_8_fu_702_p1 = i_2_reg_501;

assign tmp_9_fu_634_p3 = {{kk_reg_468}, {ap_const_lv7_0}};

assign tmp_fu_587_p1 = tmp_s_fu_577_p4;

assign tmp_i_i5_fu_1143_p1 = p_Result_4_fu_1136_p3;

assign tmp_i_i_fu_1080_p1 = p_Result_s_fu_1073_p3;

assign tmp_i_i_i6_cast1_fu_1039_p1 = loc_V_2_reg_1524;

assign tmp_i_i_i_cast2_fu_1005_p1 = loc_V_reg_1513;

assign tmp_s_fu_577_p4 = {{n_pixels_in_bus[ap_const_lv32_F : ap_const_lv32_1]}};

always @ (posedge ap_clk) begin
    tmp_reg_1207[15] <= 1'b0;
    tmp_1_reg_1228[6:0] <= 7'b0000000;
    tmp_8_reg_1262[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_13_reg_1440[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //L2triggerv5
